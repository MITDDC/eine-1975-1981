;-*-LISP-*-
;A function to read in a TAGS file and remember what is in it.
;Each function mentioned is given an ED-DEFINING-FILE-NAME property
;which is th name of the file it is mentioned under in the TAGS file.

(DECLARE (SETQ RETAIN-VARIABLE-NAMES-SWITCH 'ARGS))
(DECLARE (SETQ OPEN-CODE-MAP-SWITCH T))

(DECLARE (SPECIAL ED-TAG-TABLE-LIST))

(OR (BOUNDP 'ED-TAG-TABLE-LIST)
    (SETQ ED-TAG-TABLE-LIST NIL))

(DEFUN ED-READ-TAG-TABLE (TAG-FILE-NAME
             &AUX STREAM LINE SOURCE-FILE-NAME FUNCTION)
   (PROG ()
      (SETQ STREAM (OPEN TAG-FILE-NAME '(READ)))

      FILE

;;;READ THE NEXT FILE'S NAME.
      (OR (SETQ LINE (ED-READ-TAG-TABLE-LINE LINE STREAM))
          (PROGN (SETQ TAG-FILE-NAME (INTERN TAG-FILE-NAME))
		 (SETQ ED-TAG-TABLE-LIST (CONS TAG-FILE-NAME
					       (DELETE TAG-FILE-NAME ED-TAG-TABLE-LIST)))
                 (RETURN NIL)))
      (SETQ SOURCE-FILE-NAME (INTERN (FILE-DEFAULT-FILENAMES LINE)))
;;;IGNORE THE ENTRY LENGTH AND FILE LANGUAGE.
      (SETQ LINE (ED-READ-TAG-TABLE-LINE LINE STREAM))

      FUNCTION

      (SETQ LINE (ED-READ-TAG-TABLE-LINE LINE STREAM))
      ;;^L ENDS A FILE'S ENTRY.  GET NEXT FILE'S NAME.
      (AND (= (AR-1 LINE 0) 37)
           (GO FILE))
      ;;IGNORE LINES THAT DON'T LOOK LIKE "(DEFUN FOO <RUBOUT>..."
      (COND ((EQUAL (NSUBSTRING LINE 0 7) "(DEFUN ")
             (SETQ FUNCTION 
                   (INTERN (NSUBSTRING LINE 7 (1- (STRING-SEARCH-CHAR 177 LINE 7)))))
             (PUTPROP FUNCTION SOURCE-FILE-NAME 'ED-DEFINING-FILE-NAME)))
      (GO FUNCTION)))

;RETURN ONE LINE AND READ THE NEXT, FROM STREAM.  WE READ LINES IN A SPECIAL
;AREA SO THAT WE CAN RETURN THEM AFTER USE AND NOT USE UP SPACE.
(DEFUN ED-READ-TAG-TABLE-LINE (OLD-LINE STREAM &AUX LINE (DEFAULT-ARRAY-AREA FASL-TEMP-AREA))
    (RETURN-ARRAY OLD-LINE)
    (SETQ LINE (FUNCALL STREAM 'LINE-IN))
    LINE)

(DEFUN ED-COM-READ-TAG-TABLE (CHR)
    (ED-READ-TAG-TABLE (ED-GET-DEFAULTED-FILE-NAME "Tag Table:"))
    ED-DIS-NONE)