;;; This file is part of EINE, the Lisp Machine editor.        -*-LISP-*-
;;; For more information see LISPM2;EINE INFO.

;; This file contains functions for hacking words, lists, and s-expressions.

(DECLARE (SETQ RETAIN-VARIABLE-NAMES-SWITCH 'ARGS))
(DECLARE (SETQ OPEN-CODE-MAP-SWITCH T))

(DEFUN ED-FORWARD-WORD-BP (START-BP TIMES &AUX BP)	;RETURN A BP TO THE END OF THE
  (PROG (NIL WINP)
   (SETQ BP (ED-COPY-BP START-BP 'TEMP))
   (AND (ED-EOB-P BP) (RETURN BP NIL))
   (MULTIPLE-VALUE (NIL WINP)
     (*CATCH 'ED-EOB
        (DO I 0 (1+ I) (= I TIMES)				;  NEXT WORD AFTER ITS BP ARG.
	  (AND (= (AR-1 ED-WORD-SYNTAX-TABLE (LDB %%CH-CHAR (ED-BP-CHAR BP)))
		  ED-WORD-ALPHABETIC)
	       (GO MOVE-OVER-ALPHABETICS))
    MOVE-OVER-INITIAL-DELIMITERS
          (AND (= (AR-1 ED-WORD-SYNTAX-TABLE (LDB %%CH-CHAR (ED-ILDB BP)))
		  ED-WORD-DELIMITER)
	       (GO MOVE-OVER-INITIAL-DELIMITERS))
    MOVE-OVER-ALPHABETICS
          (AND (= (AR-1 ED-WORD-SYNTAX-TABLE (LDB %%CH-CHAR (ED-ILDB BP)))
		  ED-WORD-ALPHABETIC)
	       (GO MOVE-OVER-ALPHABETICS))
	  )))
   (RETURN BP WINP)))

(DEFUN ED-BACKWARD-WORD-BP (START-BP TIMES &AUX BP)	;RETURN A BP TO THE END OF THE
  (PROG (WINP)
   (SETQ BP (ED-COPY-BP START-BP 'TEMP))
   (AND (ED-BOB-P BP) (RETURN BP NIL))
   (MULTIPLE-VALUE (NIL WINP)
      (*CATCH 'ED-BOB
	   (DO I 0 (1+ I) (= I TIMES)		;  NEXT WORD AFTER ITS BP ARG.
	       (AND (= (AR-1 ED-WORD-SYNTAX-TABLE (LDB %%CH-CHAR (ED-BP-CHAR-BEFORE BP)))
		       ED-WORD-ALPHABETIC)
		    (GO MOVE-OVER-ALPHABETICS))
    MOVE-OVER-INITIAL-DELIMITERS
               (AND (= (AR-1 ED-WORD-SYNTAX-TABLE (LDB %%CH-CHAR (ED-DLDB BP)))
		       ED-WORD-DELIMITER)
		    (GO MOVE-OVER-INITIAL-DELIMITERS))
    MOVE-OVER-ALPHABETICS
    (AND (= (AR-1 ED-WORD-SYNTAX-TABLE (LDB %%CH-CHAR (ED-DLDB BP)))
	    ED-WORD-ALPHABETIC)
	 (GO MOVE-OVER-ALPHABETICS)))))
   (RETURN BP WINP)))


(DEFUN ED-COM-FORWARD-WORD (CHR &AUX BP WINP)
   (MULTIPLE-VALUE (BP WINP)
		   (ED-FORWARD-WORD-BP (ED-BUFFER-POINT) ED-NUMERIC-ARG))
   (OR WINP (ED-BARF))
   (ED-MOVE-POINT BP)
   (SETQ ED-MARK-STAYS T)
   ED-DIS-BPS)

(DEFUN ED-COM-BACKWARD-WORD (CHR &AUX BP WINP)
   (MULTIPLE-VALUE (BP WINP)
		   (ED-BACKWARD-WORD-BP (ED-BUFFER-POINT) ED-NUMERIC-ARG))
   (OR WINP (ED-BARF))
   (ED-MOVE-POINT BP)
   (SETQ ED-MARK-STAYS T)
   ED-DIS-BPS)

(DEFUN ED-COM-KILL-WORD (CHR &AUX BP WINP)
   (MULTIPLE-VALUE (BP WINP)
		    (ED-FORWARD-WORD-BP (ED-BUFFER-POINT) ED-NUMERIC-ARG) T)
   (OR WINP (ED-BARF))
   (ED-KILL-BETWEEN (ED-BUFFER-POINT) BP T)
   (SETQ ED-CURRENT-COMMAND-TYPE 'KILL)
   ED-DIS-BUFFER)

(DEFUN ED-COM-BACKWARD-KILL-WORD (CHR &AUX BP WINP)
   (MULTIPLE-VALUE (BP WINP)
		    (ED-BACKWARD-WORD-BP (ED-BUFFER-POINT) ED-NUMERIC-ARG) NIL)
   (OR WINP (ED-BARF))
   (ED-KILL-BETWEEN (ED-BUFFER-POINT) BP NIL)
   (SETQ ED-CURRENT-COMMAND-TYPE 'KILL)
   ED-DIS-BUFFER)

(DEFUN ED-COM-MARK-WORD (CHR &AUX BP WINP)
   (MULTIPLE-VALUE (BP WINP)
		   (ED-FORWARD-WORD-BP (ED-BUFFER-POINT) ED-NUMERIC-ARG))
   (OR WINP (ED-BARF))
   (ED-MOVE-BP (ED-BUFFER-MARK) BP)
   (SETF (ED-BUFFER-MARK-P) T)
   (SETQ ED-MARK-STAYS T)
   ED-DIS-BPS)

;**********************************
;*****  LISP EDITING COMMANDS *****
;**********************************

(COMMENT COMMANDS FOR MOVING OVER LISTS AND S-EXPRESSIONS)

(DEFUN ED-FORWARD-SEXP-BP (START-BP TIMES &OPTIONAL (LEVEL 0) &AUX BP TEM)
  (PROG (WINP)
   (SETQ BP (ED-COPY-BP START-BP 'TEMP))
   (AND (ED-EOB-P BP) (RETURN BP NIL))
   (MULTIPLE-VALUE (NIL WINP)
     (*CATCH 'ED-EOB
        (DO I 0 (1+ I) (>= I TIMES)
	  MAIN (SELECT (AR-1 ED-LIST-SYNTAX-TABLE (LDB %%CH-CHAR (ED-BP-CHAR BP)))
		       (ED-LIST-DELIMITER
			(ED-IBP BP)
			(GO MAIN))
		       (ED-LIST-ALPHABETIC
			(GO HACK-ALPHABETIC))
		       (ED-LIST-SLASH
			(ED-IBP BP)
			(GO HACK-ALPHABETIC))
		       (ED-LIST-DOUBLE-QUOTE
			(GO HACK-STRING))
		       (ED-LIST-SINGLE-QUOTE
			(ED-IBP BP)
			(GO MAIN))
		       (ED-LIST-CLOSE
			(ED-IBP BP)
			(AND (> (SETQ LEVEL (1- LEVEL)) 0)
			     (GO MAIN))
			(GO DONE))
		       (ED-LIST-OPEN
			(ED-IBP BP)
			(SETQ LEVEL (1+ LEVEL))
			(GO MAIN)))

     HACK-ALPHABETIC
	  (SELECT (AR-1 ED-LIST-SYNTAX-TABLE (LDB %%CH-CHAR (ED-ILDB BP)))
		  (ED-LIST-ALPHABETIC
		   (GO HACK-ALPHABETIC))
		  (ED-LIST-SLASH
		   (ED-IBP BP)
		   (GO HACK-ALPHABETIC))
		  (OTHERWISE
		   (COND ((> LEVEL 0)
			  (GO MAIN))
			 (T (GO DONE)))))

     HACK-STRING   
	  (SELECT (AR-1 ED-LIST-SYNTAX-TABLE (LDB %%CH-CHAR (ED-ILDB BP)))
		  (ED-LIST-DOUBLE-QUOTE
		   (ED-IBP BP)
		   (COND ((> LEVEL 0)
			  (GO MAIN))
			 (T (GO DONE))))
		  (ED-LIST-SLASH
		   (ED-IBP BP)
		   (GO HACK-STRING))
		  (OTHERWISE
		   (GO HACK-STRING)))  
     DONE )))
   (RETURN BP WINP)))

(DEFUN ED-BACKWARD-SEXP-BP (START-BP TIMES &OPTIONAL (LEVEL 0) &AUX BP TEM)
  (PROG (WINP)
   (SETQ BP (ED-COPY-BP START-BP 'TEMP))
   (AND (ED-BOB-P BP) (RETURN BP NIL))
   (MULTIPLE-VALUE (NIL WINP)
     (*CATCH 'ED-BOB
        (DO I 0 (1+ I) (>= I TIMES)
	  MAIN (SELECT (AR-1 ED-LIST-SYNTAX-TABLE (LDB %%CH-CHAR (ED-BP-CHAR-BEFORE BP)))
		       (ED-LIST-DELIMITER
			(ED-DBP BP)
			(GO MAIN))
		       (ED-LIST-ALPHABETIC
			(GO HACK-ALPHABETIC))
		       (ED-LIST-SLASH
			(ED-DBP BP)
			(GO MAIN))
		       (ED-LIST-DOUBLE-QUOTE
			(GO HACK-STRING))
		       (ED-LIST-SINGLE-QUOTE
			(ED-DBP BP)
			(GO MAIN))
		       (ED-LIST-OPEN
			(ED-DBP BP)
			(AND (= (AR-1 ED-LIST-SYNTAX-TABLE (LDB %%CH-CHAR
								 (ED-BP-CHAR-BEFORE BP)))
				 ED-LIST-SINGLE-QUOTE)
			     (ED-DBP BP))
			(AND (> (SETQ LEVEL (1- LEVEL)) 0)
			     (GO MAIN))
			(GO DONE))
		       (ED-LIST-CLOSE
			(ED-DBP BP)
			(SETQ LEVEL (1+ LEVEL))
			(GO MAIN)))

     HACK-ALPHABETIC
	  (SELECT (AR-1 ED-LIST-SYNTAX-TABLE (LDB %%CH-CHAR (ED-DLDB BP)))
		  (ED-LIST-ALPHABETIC
		   (GO HACK-ALPHABETIC))
		  (ED-LIST-SINGLE-QUOTE
		   (GO HACK-ALPHABETIC))
		  (OTHERWISE
		   (COND ((> LEVEL 0)
			  (GO MAIN))
			 (T (GO DONE)))))

     HACK-STRING   
	  (SELECT (AR-1 ED-LIST-SYNTAX-TABLE (LDB %%CH-CHAR (ED-DLDB BP)))
		  (ED-LIST-DOUBLE-QUOTE
		   (ED-DBP BP)
		   (COND ((> LEVEL 0)
			  (GO MAIN))
			 (T (GO DONE))))
		  (OTHERWISE
		   (GO HACK-STRING)))
     DONE  )))
   (RETURN BP WINP)))

(DEFUN ED-FORWARD-LIST-BP (START-BP TIMES &OPTIONAL (LEVEL 0) &AUX BP TEM)
  (PROG (WINP)
   (SETQ BP (ED-COPY-BP START-BP 'TEMP))
   (AND (ED-EOB-P BP) (RETURN BP NIL))
   (MULTIPLE-VALUE (NIL WINP)
     (*CATCH 'ED-EOB
        (DO I 0 (1+ I) (>= I TIMES)
	  MAIN (SELECT (AR-1 ED-LIST-SYNTAX-TABLE (LDB %%CH-CHAR (ED-BP-CHAR BP)))
		        (ED-LIST-CLOSE
			(ED-IBP BP)
			(AND (> (SETQ LEVEL (1- LEVEL)) 0)
			     (GO MAIN))
			(GO DONE))
		       (ED-LIST-OPEN
			(ED-IBP BP)
			(SETQ LEVEL (1+ LEVEL))
			(GO MAIN))
		       (ED-LIST-DOUBLE-QUOTE
			(GO HACK-STRING))
		       (OTHERWISE
			(ED-IBP BP)
			(GO MAIN)))

     HACK-STRING   
	  (SELECT (AR-1 ED-LIST-SYNTAX-TABLE (LDB %%CH-CHAR (ED-ILDB BP)))
		  (ED-LIST-DOUBLE-QUOTE
		   (ED-IBP BP)
		   (GO MAIN))
		  (ED-LIST-SLASH
		   (ED-IBP BP)
		   (GO HACK-STRING))
		  (OTHERWISE
		   (GO HACK-STRING)))
     DONE  )))
   (RETURN BP WINP)))

(DEFUN ED-BACKWARD-LIST-BP (START-BP TIMES &OPTIONAL (LEVEL 0) &AUX BP TEM)
  (PROG (WINP)
   (SETQ BP (ED-COPY-BP START-BP 'TEMP))
   (AND (ED-BOB-P BP) (RETURN BP NIL))
   (MULTIPLE-VALUE (NIL WINP)
     (*CATCH 'ED-BOB
        (DO I 0 (1+ I) (>= I TIMES)
	  MAIN (SELECT (AR-1 ED-LIST-SYNTAX-TABLE (LDB %%CH-CHAR (ED-BP-CHAR-BEFORE BP)))
		       (ED-LIST-DOUBLE-QUOTE
			(GO HACK-STRING))
		       (ED-LIST-OPEN
			(ED-DBP BP)
		       ;(AND (= (AR-1 ED-LIST-SYNTAX-TABLE (LDB %%CH-CHAR
		       ;				   (ED-BP-CHAR-BEFORE BP)))
		       ;	 ED-LIST-SINGLE-QUOTE)
		       ;     (ED-DBP BP))
			(AND (> (SETQ LEVEL (1- LEVEL)) 0)
			     (GO MAIN))
			(GO DONE))
		       (ED-LIST-CLOSE
			(ED-DBP BP)
			(SETQ LEVEL (1+ LEVEL))
			(GO MAIN))
		       (OTHERWISE
			(ED-DBP BP)
			(GO MAIN)))

     HACK-STRING   
	  (SELECT (AR-1 ED-LIST-SYNTAX-TABLE (LDB %%CH-CHAR (ED-DLDB BP)))
		  (ED-LIST-DOUBLE-QUOTE
		   (ED-DBP BP)
			  (GO MAIN))
		  (OTHERWISE
		   (GO HACK-STRING)))
     DONE  )))
   (RETURN BP WINP)))


; Editor commands for hacking LISP syntax.

(DEFUN ED-COM-FORWARD-SEXP (CHR &AUX BP WINP)
   (MULTIPLE-VALUE (BP WINP)
		   (ED-FORWARD-SEXP-BP (ED-BUFFER-POINT) ED-NUMERIC-ARG))
   (OR WINP (ED-BARF))
   (ED-MOVE-POINT BP)
   (SETQ ED-MARK-STAYS T)
   ED-DIS-BPS)

(DEFUN ED-COM-FORWARD-LIST (CHR &AUX BP WINP)
   (MULTIPLE-VALUE (BP WINP)
		   (ED-FORWARD-LIST-BP (ED-BUFFER-POINT) ED-NUMERIC-ARG))
   (OR WINP (ED-BARF))
   (ED-MOVE-POINT BP)
   (SETQ ED-MARK-STAYS T)
   ED-DIS-BPS)

(DEFUN ED-COM-BACKWARD-SEXP (CHR &AUX BP WINP)
   (MULTIPLE-VALUE (BP WINP)
		   (ED-BACKWARD-SEXP-BP (ED-BUFFER-POINT) ED-NUMERIC-ARG))
   (OR WINP (ED-BARF))
   (ED-MOVE-POINT BP)
   (SETQ ED-MARK-STAYS T)
   ED-DIS-BPS)

(DEFUN ED-COM-BACKWARD-LIST (CHR &AUX BP WINP)
   (MULTIPLE-VALUE (BP WINP)
		   (ED-BACKWARD-LIST-BP (ED-BUFFER-POINT) ED-NUMERIC-ARG))
   (OR WINP (ED-BARF))
   (ED-MOVE-POINT BP)
   (SETQ ED-MARK-STAYS T)
   ED-DIS-BPS)

(DEFUN ED-COM-KILL-SEXP (CHR &AUX BP WINP)
    (SETQ ED-CURRENT-COMMAND-TYPE 'KILL)
    (ED-KILL-BETWEEN (ED-BUFFER-POINT)
		     (ED-FORWARD-SEXP-BP (ED-BUFFER-POINT) ED-NUMERIC-ARG) T)
    ED-DIS-BUFFER)

(DEFUN ED-COM-BACKWARD-KILL-SEXP (CHR)
    (SETQ ED-CURRENT-COMMAND-TYPE 'KILL)
    (ED-KILL-BETWEEN (ED-BUFFER-POINT)
		     (ED-BACKWARD-SEXP-BP (ED-BUFFER-POINT) ED-NUMERIC-ARG) NIL)
    ED-DIS-BUFFER)

(DEFUN ED-COM-MARK-SEXP (CHR &AUX BP WINP)
   (MULTIPLE-VALUE (BP WINP)
		   (ED-FORWARD-SEXP-BP (ED-BUFFER-POINT) ED-NUMERIC-ARG))
   (OR WINP (ED-BARF))
   (ED-MOVE-BP (ED-BUFFER-MARK) BP)
   (SETF (ED-BUFFER-MARK-P) T)
   (SETQ ED-MARK-STAYS T)
   ED-DIS-BPS)

(DEFUN ED-COM-FORWARD-UP-LIST (CHR &AUX BP WINP)
   (MULTIPLE-VALUE (BP WINP)
		   (ED-FORWARD-LIST-BP (ED-BUFFER-POINT) ED-NUMERIC-ARG 1))
   (OR WINP (ED-BARF))
   (ED-MOVE-POINT BP)
   (SETQ ED-MARK-STAYS T)
    ED-DIS-BPS)

(DEFUN ED-COM-BACKWARD-UP-LIST (CHR &AUX BP WINP)
   (MULTIPLE-VALUE (BP WINP)
		   (ED-BACKWARD-LIST-BP (ED-BUFFER-POINT) ED-NUMERIC-ARG 1))
   (OR WINP (ED-BARF))
   (ED-MOVE-POINT BP)
   (SETQ ED-MARK-STAYS T)
    ED-DIS-BPS)

;;; All OUTERMOST LIST commands are to be flushed.
(DEFUN ED-COM-FORWARD-OUTERMOST-LIST (CHR &AUX BP WINP)
    (ED-COM-BACKWARD-OUTERMOST-LIST NIL)
    (MULTIPLE-VALUE (BP WINP)
		    (ED-FORWARD-LIST-BP (ED-BUFFER-POINT) 1))
    (ED-MOVE-POINT BP)
    (SETQ ED-MARK-STAYS T)
    ED-DIS-BPS)

;;; All OUTERMOST LIST commands are to be flushed.
(DEFUN ED-COM-MARK-OUTERMOST-LIST (CHR &AUX BP WINP)
    (ED-COM-BACKWARD-OUTERMOST-LIST NIL)
    (MULTIPLE-VALUE (BP WINP)
		    (ED-FORWARD-LIST-BP (ED-BUFFER-POINT) 1))
    (ED-MOVE-BP (ED-BUFFER-MARK) BP)
    (SETF (ED-BUFFER-MARK-P) T)
    (SETQ ED-MARK-STAYS T)
    ED-DIS-BPS)

;;; All OUTERMOST LIST commands are to be flushed.
(DEFUN ED-COM-BACKWARD-OUTERMOST-LIST (CHR &AUX BP WINP TRIED)
    (ED-POINT-PDL-PUSH (ED-BUFFER-POINT))
    (SETQ BP (ED-BUFFER-POINT) WINP T TRIED NIL)
    (DO () ((OR (NULL WINP)
		(AND TRIED    ; Bypass this check the first time.
		     (= (ED-BP-CHAR-POS BP) 0))))
      (SETQ TRIED T)
      (MULTIPLE-VALUE (BP WINP)
		      (ED-BACKWARD-LIST-BP BP 1 1)))
    (ED-MOVE-POINT BP)
    (SETQ ED-MARK-STAYS T)
    ED-DIS-BPS)

(DEFUN ED-COM-MARK-DEFUN (CHR)
  (PROG (LINE-NUM BP1 BP2 WINP)
    (ED-POINT-PDL-PUSH (ED-BUFFER-POINT))
    (SETQ BP1 (ED-BP 0 (AR-1 ED-OPEN-BUFFER 0) 'TEMP))	;Random BP.
    (OR (DO ((I (ED-BP-LINE-NUM (ED-BUFFER-POINT)) (1- I)))
	    ((< I 0) NIL)
	  (ED-MOVE-BP BP1 I 0)
	  (AND (CHAR-EQUAL (ED-BP-CHAR BP1) 50)
	       (RETURN T)))
	(GO BUFBEG))
    (MULTIPLE-VALUE (BP2 WINP)
		    (ED-FORWARD-LIST-BP BP1 1))
    (OR WINP (ED-BARF))
    (AND (ED-BP-< (CAR (ED-BUFFER-POINT-PDL)) BP2)	;Were we in the middle of this defun?
	 (GO CONTIN))					;Yes, fine. Continue.
BUFBEG ;; We were either before any <crlf> <open>'s, or between defuns.
    (OR (DO ((I (ED-BP-LINE-NUM (CAR (ED-BUFFER-POINT-PDL))) (1+ I))
	     (LIMIT (ED-BUFFER-FILL-POINTER)))
	    ((>= I LIMIT) NIL)
	  (ED-MOVE-BP BP1 I 0)
	  (AND (CHAR-EQUAL (ED-BP-CHAR BP1) 50)
	       (RETURN T)))
	(ED-BARF))
    (MULTIPLE-VALUE (BP2 WINP)
		    (ED-FORWARD-LIST-BP BP1 1))
    (OR WINP (ED-BARF))
CONTIN
    (ED-MOVE-POINT BP1)
    (ED-MOVE-BP (ED-BUFFER-MARK) BP2)
    (SETF (ED-BUFFER-MARK-P) T)
    (SETQ ED-MARK-STAYS T)
    (RETURN ED-DIS-BPS)))

;Looks backwards for a line starting with an open paren.
;Returns line number, or NIL if not found.
(DEFUN ED-FIND-DEFUN-BACKWARD (BP)
    (DO ((LN (COND ((ZEROP (ED-BP-CHAR-POS BP)) (1- (ED-BP-LINE-NUM BP)))
		   (T (ED-BP-LINE-NUM BP)))
	     (1- LN))
         (LINE))
	((< LN 0) NIL)
      (SETQ LINE (AR-1 ED-OPEN-BUFFER LN))
      (AND (> (ED-LINE-FILL-POINTER LINE) 0)
           (CHAR-EQUAL 50 (AR-1 LINE 0))
	   (RETURN LN))))

;Looks backward for a DEFUN, returns temp BP to it, or NIL if lost.
(DEFUN ED-BACKWARD-DEFUN-BP (BP &AUX LN)
    (SETQ LN (ED-FIND-DEFUN-BACKWARD BP))
    (COND ((NULL LN) NIL)
	  (T (ED-BP 0 (AR-1 ED-OPEN-BUFFER LN) 'TEMP))))

(DEFUN ED-COM-BEGINNING-OF-DEFUN (CHR &AUX BP)
    (SETQ ED-MARK-STAYS T)
    (SETQ BP (ED-BACKWARD-DEFUN-BP (ED-BUFFER-POINT)))
    (COND ((NULL BP) (ED-BARF))
	  (T (ED-POINT-PDL-PUSH (ED-BUFFER-POINT))
	     (ED-MOVE-POINT BP)
	     ED-DIS-BPS)))

(DEFUN ED-COM-END-OF-DEFUN (CHR &AUX BP WINP LN COPY)
    (SETQ ED-MARK-STAYS T)
    (SETQ COPY (ED-COPY-BP (ED-BUFFER-POINT) 'TEMP))
    (SETQ BP (ED-BACKWARD-DEFUN-BP (ED-BUFFER-POINT)))	;Go to front of DEFUN.
    (OR BP						;Didn't work.
        (SETQ BP (ED-COPY-BP (ED-BUFFER-BOB-BP) 'TEMP)))
    (MULTIPLE-VALUE (BP WINP)				;No move over that DEFUN.
         (ED-FORWARD-LIST-BP BP 1))
    (OR WINP (ED-BARF))					;Didn't work.
    (COND ((ED-BP-< BP COPY)				;If we were between DEFUNs,
           (MULTIPLE-VALUE (BP WINP)			;  then move ahead another.
                (ED-FORWARD-LIST-BP BP 1))
           (OR WINP (ED-BARF))))
    (SETQ LN (ED-BP-LINE-NUM BP))
    (COND ((>= LN (1- (ED-BUFFER-FILL-POINTER)))	;If we are on the last line of
	   (ED-MOVE-TO-EOL BP))				; the buffer, move to end.
	  (T (ED-MOVE-BP BP (1+ LN) 0)))		;Else move to beginning of next line.
    (ED-POINT-PDL-PUSH (ED-BUFFER-POINT))		;Save point
    (ED-MOVE-POINT BP)					;   and move it.
    ED-DIS-BPS)
