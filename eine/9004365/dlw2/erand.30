;;; This file is part of EINE, the Lisp Machine editor.        -*-LISP-*-
;;; For more information see LISPM2;EINE INFO.

;; This file contains functions for various random things.

(DECLARE (SETQ RETAIN-VARIABLE-NAMES-SWITCH 'ARGS))
(DECLARE (SETQ OPEN-CODE-MAP-SWITCH T))

;Args just like COMPLETING-READ except that the first arg is a prompt string
;for the mode line, and the echo piece of paper is always used for echoing,
;and the input stream defaults to ED-COMMAND-STREAM.
(DEFUN ED-COMPLETING-READ-PROMPT (PROMPT MODE-LIST ALIST &OPTIONAL
					 (INPUT-STREAM ED-COMMAND-STREAM)
					 (IMPOSSIBLE-IS-OK-P NIL)
					 (RUBOUT-IS-OK-P NIL)
					 (DISPLAY-PC-PPR ED-ECHO-PC-PPR)
					 )
  (PROG (TEM TEM1)
    (TV-SET-CURSORPOS ED-ECHO-PC-PPR 0 0)
    (ED-BIND-MODE-LINE PROMPT MODE-LIST
	     (MULTIPLE-VALUE (TEM TEM1)
                       (COMPLETING-READ ED-ECHO-PC-PPR ALIST
					INPUT-STREAM IMPOSSIBLE-IS-OK-P
					RUBOUT-IS-OK-P DISPLAY-PC-PPR)))
    (AND TEM1 (ED-MUST-REDISPLAY ED-DIS-SCREEN))
    (RETURN TEM TEM1)))

(DEFUN ED-SIMPLE-READER (PC-PPR &OPTIONAL (INPUT-STREAM ED-COMMAND-STREAM))
   (OR (BOUNDP 'ED-READER-STRING)
       (SETQ ED-READER-STRING
	     (MAKE-ARRAY DEFAULT-ARRAY-AREA 'ART-STRING 200. NIL '(0))))
   (TV-ACTIVATE-PC-PPR PC-PPR)
   (TV-CLEAR-EOF PC-PPR)
   (PROG1
    (PROG (CHAR TEM X Y)
	  (MULTIPLE-VALUE (X Y)
			  (TV-READ-CURSORPOS PC-PPR))
    CLEAR (TV-CLEAR-EOL PC-PPR)
	  (STORE-ARRAY-LEADER 0 ED-READER-STRING 0)  ;CLEAR THE BUFFER
     LOOP
	  (SETQ CHAR (FUNCALL INPUT-STREAM 'TYI))
	  (COND ((OR (= CHAR 507) (= CHAR 547))
		 (RETURN NIL)))
	  (COND ((= CHAR 521)			       ;control q
		 (SETQ CHAR (FUNCALL INPUT-STREAM 'TYI))
		 (COND ((OR (= CHAR 507) (= CHAR 547))
			(RETURN NIL))))
		((OR (= CHAR 40) (= CHAR 215))
		 (RETURN (ED-COPY-STRING ED-READER-STRING)))
		((= CHAR 207)                          ;rubout
		 (TV-BACKSPACE PC-PPR)
		 (TV-CLEAR-CHAR PC-PPR)
		 (STORE-ARRAY-LEADER (1- (ARRAY-LEADER ED-READER-STRING 0))
				     ED-READER-STRING 0))
		((OR (= CHAR 214) (= CHAR 514) (= CHAR 554))   ;FORM OR ^L
		 (TV-SET-CURSORPOS PC-PPR X Y)
		 (TV-CLEAR-EOF PC-PPR)
		 (TV-STRING-OUT PC-PPR ED-READER-STRING))
		((= CHAR 202)
		 (GO CLEAR))
		((< CHAR 200)
		 (AND (>= CHAR ## a)
		      (<= CHAR ## z)
		      (SETQ CHAR (- CHAR 40)))
		 (TV-TYO PC-PPR CHAR)
		 (ARRAY-PUSH ED-READER-STRING CHAR))
		(T (TV-BEEP)))
	  (GO LOOP))
    (TV-DEACTIVATE-PC-PPR PC-PPR))) 
 
(COMMENT RANDOM FUNCTIONS)

; ^X, etc. prefix characters.

(SPECIAL ED-ARRAY)					;LOCALLY USED SPECIAL

(DEFUN ED-MAKE-PREFIX-CHAR (ED-ARRAY)			;RETURNS AN ED-COM TYPE FUNCTION.
    (CLOSURE '(ED-ARRAY)
	     (FUNCTION (LAMBDA (CHR)
			(TV-ACTIVATE-PC-PPR ED-ECHO-PC-PPR)
			(TV-SET-CURSORPOS ED-ECHO-PC-PPR 0 0)
			(TV-CLEAR-EOL ED-ECHO-PC-PPR)
			(TYO-PRETTY ED-LAST-COMMAND-CHAR ED-ECHO-STREAM)
			(PRINC ": " ED-ECHO-STREAM)
			(SETQ ED-LAST-COMMAND-CHAR (FUNCALL ED-COMMAND-STREAM 'TYI))
			(TYO-PRETTY ED-LAST-COMMAND-CHAR ED-ECHO-STREAM)
			(TV-DEACTIVATE-PC-PPR ED-ECHO-PC-PPR)
			(ED-COMMAND-EXECUTE
			 (ED-COMMAND-LOOKUP ED-LAST-COMMAND-CHAR ED-ARRAY)
			 ED-LAST-COMMAND-CHAR)
			))))

; This is a function suitable for being put on ED-MODE-LINE-LIST.
(DEFUN ED-DISPLAY-BUFFER-NAME ()
    (TV-STRING-OUT ED-STATUS-PC-PPR (COND ((NULL ED-OPEN-BUFFER) "(None.)")
					  (T (ED-BUFFER-NAME ED-OPEN-BUFFER)))))

(DEFUN ED-COM-EXTENDED-COMMAND (CHR &AUX TEM TEM1)
    (MULTIPLE-VALUE (TEM TEM1)
     (ED-COMPLETING-READ-PROMPT "Extended command:"
				ED-RANDOM-MODE-LIST
				ED-EXTENDED-COMMAND-ALIST
				ED-COMMAND-STREAM
				NIL		;Impossible is NOT OK.
				T		;Rubout it ok.
				ED-DISPLAY-PC-PPR))
    (COND ((NULL TEM) (TV-BEEP) (SETQ TEM ED-DIS-NONE))	;Quit.
	  ((ZEROP TEM) (SETQ TEM ED-DIS-NONE))			;Over-rubout.
	  (T (SETQ TEM (FUNCALL (CDR TEM) CHR))))
    (SETQ ED-REDISPLAY-LOSES T)
    TEM)

(DEFUN ED-INSTALL (&AUX NAME KEY)
    (PRINC "Name of function to install:")
    (SETQ NAME (READ)) (TERPRI)
    (PRINC "Key to get it:")
    (SETQ KEY (KBD-TYI))
    (ED-COMMAND-STORE NAME KEY))

(DEFUN ED-COM-INSTALL-COMMAND (CHR &AUX NAME KEY)
    (SETQ NAME (INTERN (ED-GET-STRING-FROM-MINI-BUFFER "Name of function to install:")))
    (ED-SET-UP-ECHO-AREA "Key to get it:")
    (SETQ KEY (FUNCALL ED-COMMAND-STREAM 'TYI))
    (TYO-PRETTY KEY ED-ECHO-STREAM)
    (ED-SET-DOWN-ECHO-AREA)
    (ED-COMMAND-STORE NAME KEY)
    ED-DIS-NONE)

(DEFUN TYO-PRETTY (CHAR &OPTIONAL (STREAM STANDARD-OUTPUT)
			&AUX CHNAME)
    (COND ((ZEROP (LOGAND CHAR 2000))
	   (OR (ZEROP (LOGAND CHAR 400)) (PRINC "Control-" STREAM))
	   (OR (ZEROP (LOGAND CHAR 1000)) (PRINC "Meta-" STREAM))
	   (SETQ CHAR (LOGAND CHAR 377))
	   (SETQ CHNAME (ASSQ CHAR '((40 "Space") (201 "Break") (202 "Clear")
				     (203 "Call") (204 "Escape") (205 "Back/Next")
				     (206 "Help") (207 "Rubout") (210 "Backspace")
				     (211 "Tab") (212 "Line") (213 "VT") (214 "Form")
				     (215 "Return") (200 "Null"))))
	   (COND (CHNAME (PRINC (CADR CHNAME) STREAM))
		 (T (TYO CHAR STREAM))))
	  (T
	   (FORMAT-STRING STREAM "Mouse-~A~A in the ~A region"
			  (NTH (LDB 0003 CHAR) '("Left" "Middle" "Right"))
			  (NTH (LDB 0303 CHAR) '("" "-Twice" "-Thrice"))
			  (NTH (LDB 0603 CHAR) '("Text" "Line" "Paragraph")))))
    CHAR)

(DEFUN ED-SHOW (&AUX STOP)
       (SETQ STOP (ED-BUFFER-FILL-POINTER))
       (TERPRI) (PRINC "THE OPEN BUFFER:")
       (DO ((IDX 0 (1+ IDX)))
	   ((= IDX STOP) NIL)
	   (PRINT (AR-1 ED-OPEN-BUFFER IDX)))
       (TERPRI) (PRINC "THE WINDOW (FIRST 10 ENTRIES):")
       (DO IDX 0 (1+ IDX) (= IDX 10)
	   (PRINT (AR-2 ED-WINDOW IDX 0))))


(DEFUN I NIL (ED-INITIALIZE))

(DEFUN IT ()
       (SETQ ED-CONTROL-X-DISPATCH-TABLE
	     (MAKE-ARRAY ED-RANDOM-AREA 'ART-Q-LIST '(4 220)))
       (ED-SETUP-DISPATCH-TABLE ED-CONTROL-X-DISPATCH-TABLE
				ED-INITIAL-CONTROL-X-DISPATCH-TABLE)

       (SETQ ED-COMMAND-DISPATCH-TABLE
	     (MAKE-ARRAY ED-RANDOM-AREA 'ART-Q-LIST '(4 220)))
       (ED-SETUP-DISPATCH-TABLE ED-COMMAND-DISPATCH-TABLE ED-INITIAL-COMMAND-DISPATCH-TABLE)
)


;;; Various editor realtime commands.

(COMMENT VARIOUS RANDOM REALTIME EDITOR COMMANDS)

; All should start with ED-COM-
(DEFUN ED-COM-QUIT (CHR)
    (SETQ ED-EXIT-FLAG (FSYMEVAL 'ED-EXF-QUIT))
    ED-DIS-NONE)

(DEFUN ED-EXF-QUIT () "Back to LISP top level.")


(DEFUN ED-COM-STUPID-TAB (CHR &AUX CHAR-WIDTH TEM CURRENT-POS)
  (SETQ TEM (ED-WINDOW-PC-PPR ED-WINDOW))
  (SETQ CHAR-WIDTH (FONT-CHAR-WIDTH (AR-1 (PC-PPR-FONT-MAP TEM)
					  ED-CURRENT-DEFAULT-FONT)))
  (SETQ CURRENT-POS (TV-READ-BLINKER-CURSORPOS (ED-WINDOW-POINT-BLINKER ED-WINDOW)))
  (SETQ TEM (* 10 CHAR-WIDTH))
  (DO L (// (- (* TEM (1+ (// CURRENT-POS TEM))) CURRENT-POS) CHAR-WIDTH) (1- L) (<= L 0)
    (ED-INSERT-CHARS-MOVING (ED-BUFFER-POINT) (DPB ED-CURRENT-DEFAULT-FONT %%CH-FONT 40)))
  ED-DIS-BUFFER)

(DEFUN ED-COM-EXCHANGE-CHARS (CHR &AUX CHAR-POS LINE TEM)
   (SETQ LINE (ED-BP-LINE (ED-BUFFER-POINT))
	 CHAR-POS (ED-BP-CHAR-POS (ED-BUFFER-POINT)))
   (COND ((< CHAR-POS 2)
	  (ED-BARF))
	 (T (ED-MUNG LINE)
	    (SETQ TEM (AR-1 LINE (1- CHAR-POS)))
	    (AS-1 (AR-1 LINE (- CHAR-POS 2)) LINE (1- CHAR-POS))
	    (AS-1 TEM LINE (- CHAR-POS 2))))
   ED-DIS-BUFFER)

(DEFUN ED-COM-COUNT-LINES-REGION (CHR)
    (OR (ED-BUFFER-MARK-P) (ED-BARF))
    ((LAMBDA (BASE *NOPOINT)
	     (PRINT (ABS (- (ED-BP-LINE-NUM (ED-BUFFER-MARK))
			    (ED-BP-LINE-NUM (ED-BUFFER-POINT))))
		    ED-STATUS-STREAM))
     10. T)
    (SETQ ED-MARK-STAYS T)
    ED-DIS-NONE)

(DEFUN ED-COM-PRINT-HPOS (CHR)
    ((LAMBDA (BASE *NOPOINT)  ;I THINK THIS IS HAT EMACS IS DOING.
	     (PRINT (ED-BP-CHAR-POS (ED-BUFFER-POINT)) ED-STATUS-STREAM))
     10. T)
    (SETQ ED-MARK-STAYS T)
    ED-DIS-NONE)

(DEFUN ED-COM-SET-POP-MARK (CHR)
   (COND ((<= ED-NUMERIC-ARG 3)
	  (ED-POINT-PDL-PUSH (ED-BUFFER-POINT))
	  (ED-MOVE-BP (ED-BUFFER-MARK) (ED-BUFFER-POINT))
	  (SETF (ED-BUFFER-MARK-P) T)
	  (SETQ ED-MARK-STAYS T)
	  ED-DIS-BPS)
	 ((<= ED-NUMERIC-ARG 17)
	  (ED-MOVE-POINT (ED-POINT-PDL-POP))
	  (SETQ ED-MARK-STAYS T)
	  ED-DIS-BPS)
	 (T (ED-POINT-PDL-POP)
	    (SETQ ED-MARK-STAYS T)
	    ED-DIS-NONE)))

(DEFUN ED-COM-SELF-DOCUMENT (CHR &AUX TEM CHAR (TABLE ED-COMMAND-DISPATCH-TABLE))
    (PROG NIL
	  (TV-ACTIVATE-PC-PPR ED-ECHO-PC-PPR)
	  (TV-SET-CURSORPOS ED-ECHO-PC-PPR 0 0)
	  (TV-CLEAR-EOL ED-ECHO-PC-PPR)
	  (TV-STRING-OUT ED-ECHO-PC-PPR "The command on ")
	  (SETQ TEM (FUNCALL ED-COMMAND-STREAM 'TYI))
	  (TYO-PRETTY TEM ED-ECHO-STREAM)
	  (SETQ TEM (ED-COMMAND-LOOKUP TEM))
	L (COND ((NULL TEM)
		 (PRINC " is undefined." ED-ECHO-STREAM))
		((SYMBOLP TEM)
		 (PRINC " is " ED-ECHO-STREAM)
		 (PRINC TEM ED-ECHO-STREAM)
		 (TYO ## . ED-ECHO-STREAM))
		((CLOSUREP TEM)				;***** SLIGHT CROCK
		 ;(PRINC " is a dispatch command." ED-ECHO-STREAM)
		 (TV-TYO ED-ECHO-PC-PPR 40)
		 (SETQ CHAR (FUNCALL ED-COMMAND-STREAM 'TYI))
		 (TYO-PRETTY CHAR ED-ECHO-STREAM)
;		 (SETQ TABLE (FUNCALL TEM T)) ;Special hack in ED-MAKE-PREFIX-CHAR, T returns 
		 (SETQ TABLE (SYMEVAL-IN-CLOSURE TEM 'ED-ARRAY))
		 (SETQ TEM (ED-COMMAND-LOOKUP CHAR TABLE))   ;   the array.
		 (GO L))
		(T (PRINC " is garbage!?" ED-ECHO-STREAM)))
	(TV-DEACTIVATE-PC-PPR ED-ECHO-PC-PPR)
	(SETQ ED-MARK-STAYS T)
	(RETURN ED-DIS-NONE))) 

(DEFUN ED-COM-ARGLIST (CHR &AUX BP1 BP2 WINP X)
    (MULTIPLE-VALUE (BP1 WINP)
		    (ED-BACKWARD-SEXP-BP (ED-BUFFER-POINT) 1))
    (OR WINP (ED-BARF))
    (MULTIPLE-VALUE (BP2 WINP)
		    (ED-FORWARD-SEXP-BP BP1 1))
    (OR WINP (ED-BARF))
    (OR (EQ (ED-BP-LINE BP1) (ED-BP-LINE BP2))
	(ED-BARF))
    (PKG-BIND (ED-BUFFER-PACKAGE ED-BUFFER)
       (SETQ X (READ-FROM-STRING (NSUBSTRING
				  (ED-BP-LINE BP1)
				  (ED-BP-CHAR-POS BP1)
				  (ED-BP-CHAR-POS BP2)
				  ED-RANDOM-AREA))))
    (OR (SYMBOLP X) (ED-BARF X " not a symbol."))
    (TV-CLEAR-PC-PPR ED-ECHO-PC-PPR)
    (COND ((NOT (FBOUNDP X))
	   (FORMAT-STRING ED-ECHO-STREAM "~S is not defined." X))
	  (T
	   (FORMAT-STRING ED-ECHO-STREAM "~S: ~S" X (ARGLIST X))))
    ED-DIS-NONE)

(DEFUN ED-COM-MARK-UNDERLINE (CHR)
    (SETQ ED-REGION-MARKING-MODE 'ED-MARK-UNDERLINE)
    (SETF (ED-WINDOW-REGION-MARKING-OFFSET ED-WINDOW)
	  (- (PC-PPR-LINE-HEIGHT (ED-WINDOW-PC-PPR ED-WINDOW))
	     ED-GLOBAL-WINDOW-VSP))
    (SETF (ED-WINDOW-REGION-MARKING-HEIGHT ED-WINDOW) 1)
    ED-DIS-BUFFER)

(DEFUN ED-COM-MARK-REVERSE-VIDEO (CHR)
    (SETQ ED-REGION-MARKING-MODE 'ED-MARK-REVERSE-VIDEO)
    (SETF (ED-WINDOW-REGION-MARKING-OFFSET ED-WINDOW) 0)
    (SETF (ED-WINDOW-REGION-MARKING-HEIGHT ED-WINDOW)
	  (- (PC-PPR-LINE-HEIGHT (ED-WINDOW-PC-PPR ED-WINDOW))
	     ED-GLOBAL-WINDOW-VSP))
    ED-DIS-BUFFER)

(DEFUN ED-COM-MARK-INVISIBLE (CHR)
    (SETQ ED-REGION-MARKING-MODE NIL)
    ED-DIS-BUFFER)

(DEFUN ED-COM-IBEAM-BLINKER (CHR)
    (TV-SET-BLINKER-FUNCTION (ED-WINDOW-POINT-BLINKER ED-WINDOW)
			     'TV-IBEAM-BLINKER)
    (SETQ ED-MARK-STAYS T)
    ED-DIS-NONE)

(DEFUN ED-COM-RECTANGULAR-BLINKER (CHR)
    (TV-SET-BLINKER-FUNCTION (ED-WINDOW-POINT-BLINKER ED-WINDOW)
			     'TV-RECTANGULAR-BLINKER)
    (SETQ ED-MARK-STAYS T)
    ED-DIS-NONE)

(DEFUN ED-COM-ZOWIE (CHR)
    (SETQ ED-ZOWIE-FLAG (NOT ED-ZOWIE-FLAG))
    (SETQ ED-MARK-STAYS T)
    ED-DIS-NONE)

(DEFUN ED-COM-BARFOLA (CHR)
    (SETQ ED-BARFOLA-FLAG (NOT ED-BARFOLA-FLAG))
    (SETQ ED-MARK-STAYS T)
    ED-DIS-NONE)

(DEFUN ED-COM-QUOTED-INSERT (CHR &AUX CHAR)
    (TV-ACTIVATE-PC-PPR ED-ECHO-PC-PPR)
    (TV-SET-CURSORPOS ED-ECHO-PC-PPR 0 0)
    (TV-CLEAR-EOL ED-ECHO-PC-PPR)
    (TV-STRING-OUT ED-ECHO-PC-PPR "Quote: ")
    (SETQ CHAR (FUNCALL ED-COMMAND-STREAM 'TYI))
    (OR CHAR (ED-BARF))
    (SETQ CHAR (LOGAND 377 CHAR))
    (TV-TYO ED-ECHO-PC-PPR CHAR)
    (TV-DEACTIVATE-PC-PPR ED-ECHO-PC-PPR)
    (LET ((ED-LAST-COMMAND-CHAR CHAR))
	 (ED-COM-SELF-INSERT CHR)))

(DEFUN ED-COM-FLASH-ON (CHR)
    (SETQ TV-BEEP NIL)
    ED-DIS-NONE)

(DEFUN ED-COM-FLASH-OFF (CHR)
    (SETQ TV-BEEP T)
    ED-DIS-NONE)
